### Get all Payments for the by the Current User

Returns all the payments for the logged in user.

* Require Authentication: true
* Request
  * Method: GET
  * URL: /api/payments/current
  * Body: none

* Successful Response
  * Status Code: 200
  * Headers:
    * Content-Type: application/json
  * Body:

    ```json
    {
      "Payements": [
        {
          "id": 1,
          "payerId": {
                        "id":1,
                        "username": "anurag",
                        "email" : "email"
                    },
          "payeeId": {
                        "id":1,
                        "username": "anurag",
                        "email" : "email"
                    },
          "amount" :500,
          "status" :"pending",
          "comments":[{
                        "id":1,
                        "user": "anurag",
                        "userId " : 3,
                        "expenseId":5

                    }],

        }
      ]
    }
    ```

### Create a Payement

Creates and returns a new payement.

* Require Authentication: true
* Request
  * Method: POST
  * URL: /api/payments
  * Headers:
    * Content-Type: application/json
  * Body:
      ```json

    {
      "payerId": 1,
      "payeeId": 2,
      "amount" :500,
      <!-- "status": true, This is could be default os open -->
    }
* Successful Response
  * Status Code: 201
  * Headers:
    * Content-Type: application/json
  * Body:
 ```json
    {
      "payerId": 1,
      "payeeId": 2,
      "status": "Open",
      "amount" :500,
      "createdAt": "2021-11-19 20:39:36",
      "updatedAt": "2021-11-19 20:39:36"
    }
    ```
### Edit a Payment

Updates and returns an existing payment.

* Require Authentication: true
* Require proper authorization: Group must belong to the current user
* Request
  * Method: PUT
  * URL: /api/groups/:paymentId
  * Headers:
    * Content-Type: application/json
  * Body:
  {
      "payerId": 1,
      "payeeId": 2,
      "amount" :500,
      "status": "Open",
  }

* Successful Response
  * Status Code: 201
  * Headers:
    * Content-Type: application/json
  * Body:
 ```json
    {
      "payerId": 1,
      "payeeId": 2,
      "status": "Open",
      "amount" :500,
      "createdAt": "2021-11-19 20:39:36",
      "updatedAt": "2021-11-19 20:39:36"
    }
    ```

* Error Response: Body validation errors
  * Status Code: 400
  * Headers:
    * Content-Type: application/json
  * Body:

    ```json
    {
      "message": "Bad Request", // (or "Validation error" if generated by Sequelize),
      "errors": {
        "payeeId": "Needs to be a valid user other than the current logged in user",
        "status":  "Type must be 'Open' or 'Completed'",
      }
    }

* Error response: Couldn't find a Payement with the specified id
  * Status Code: 404
  * Headers:
    * Content-Type: application/json
  * Body:

    ```json
    {
      "message": "Couldn't find a Payement with the specified id"
    }

### Delete a Payment

Deletes an existing payement.

* Require Authentication: true
* Require proper authorization: Group must belong to the current user
* Request
  * Method: DELETE
  * URL: /api/payments/:paymentId
  * Body: none

* Successful Response
  * Status Code: 200
  * Headers:
    * Content-Type: application/json
  * Body:
    ```json
    {
      "message": "Successfully deleted"
    }
    ```
* Error response: Couldn't find a Payement with the specified id
  * Status Code: 404
  * Headers:
    * Content-Type: application/json
  * Body:

    ```json
    {
      "message": "Payement couldn't be found"
    }
    ```
